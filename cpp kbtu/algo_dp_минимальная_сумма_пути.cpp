#include <iostream>
using namespace std;
/* Дается двумерный массив чисел, мы стоим на левом верхнем углу, финиш находится на правом нижнем углу. Надо добраться до финиша минимизируя суммы чисел которые будут встречаться по пути, при этом можно идти только вниз и вправо */
int main(){
    int n,m;
    cin>>n>>m;
    int a[n][m];
    for (int i=0;i<n;i++){
        for (int j=0;j<m;j++){
            cin>>a[i][j];
        }
    }
    int dp[100][100]={}; /* Заполняем массив нулями */
    dp[0][0]=a[0][0];
    for (int i=1;i<n;i++)
        dp[i][0]=dp[i-1][0]+a[i][0]; /* Первый столбец заполняем суммами верхних ячеек, так как по первому столбцу можно пройти если идти только вниз */

    for (int j=1;j<m;j++)
        dp[0][j]=dp[0][j-1]+a[0][j]; /* Первую строку заполняем суммами левых ячеек, так как по первой строке можно пройти если идти только вправо */
    for (int i=1;i<n;i++){
        for (int j=1;j<m;j++){
            dp[i][j]=min(dp[i-1][j],dp[i][j-1])+a[i][j]; /* Заполняем каждую ячейку пустого двумерного массива выбирая минимальный между левой и верхней ячейкой и суммируя с соответствующей ячейкой оригинального массива. Таким образом каждая ячейка будет содержать минимально возможное число состоящее из сумм предыдущих */
        }
    }
    cout<<dp[n-1][m-1]; /* Ответом будет последняя ячейка массива которая содержит в себе минимально возможную сумму из всех ячеек оригинального массива */

    return 0;
}
